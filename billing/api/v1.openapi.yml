openapi: 3.0.0
info:
  title: Simple Billing API
  version: 0.1.0
servers:
  - url: http://localhost:8080
tags:
  - name: Authentication
  - name: Wallets
paths:
  /v1/auth/login:
    post:
      summary: Logs user in
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginBody"
      responses:
        '200':
          description: Returns JSON object of a user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusSuccess"
                  data:
                    $ref: "#/components/schemas/User"
          headers:
            Set-Cookie:
              schema:
                type: string
                example: sessionid="Cookie="; Path=/; HttpOnly
        '422':
          description: Returns a JSON object of an error if input failed validation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"

  /v1/auth/logout:
    post:
      summary: Logs user out
      tags:
        - Authentication
      responses:
        '200':
          description: Returns an empty data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusSuccess"
                  data:
                    $ref: "#/components/schemas/NullData"

  /v1/auth/register:
    post:
      summary: Registers user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterBody"
      responses:
        '200':
          description: Returns a JSON object of a user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '422':
          description: Returns a JSON object of an error if input failed validation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"

  /v1/wallets:
    get:
      summary: Retrieves a wallet
      security:
        - ApiKeyAuth: []
      tags:
        - Wallets
      responses:
        '200':
          description: Returns a JSON object of a wallet.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wallet"
        '401':
          description: Returns a JSON object of an error if user hasn't authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"
        '404':
          description: Returns a JSON object of an error if user has no wallet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"

  /v1/wallets/operations:
    get:
      summary: Retrieves users operations
      parameters:
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/order'
      security:
        - ApiKeyAuth: []
      tags:
        - Wallets
      responses:
        '200':
          description: Returns an array of JSON operations objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusSuccess"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Operation"
        '401':
          description: Returns a JSON object of an error if user hasn't authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"
        '404':
          description: Returns a JSON object of an error if user has no wallet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"

  /v1/wallets/deposit:
    post:
      summary: Deposits a wallet with requested amount
      security:
        - ApiKeyAuth: []
      tags:
        - Wallets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WalletDepositBody"
      responses:
        '200':
          description: Returns a JSON object of an operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
        '401':
          description: Returns a JSON object of an error if user hasn't authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"
        '404':
          description: Returns a JSON object of an error if user has no wallet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"
        '422':
          description: Returns a JSON object of an error if input failed validation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"

  /v1/wallets/transfer:
    post:
      summary: Transfers amount between users
      security:
        - ApiKeyAuth: []
      tags:
        - Wallets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WalletTransferBody"
      responses:
        '200':
          description: Returns a JSON object of an operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
        '400':
          description: Returns a JSON object of an error if user has insufficient funds.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"
        '401':
          description: Returns a JSON object of an error if user hasn't authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"
        '404':
          description: Returns a JSON object of an error if user has no wallet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"
        '422':
          description: Returns a JSON object of an error if input failed validation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/StatusFailure"
                  data:
                    $ref: "#/components/schemas/NullData"

components:
  schemas:
    StatusSuccess:
      type: object
      properties:
        success:
          type: boolean
          example: true
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
          example: []
    StatusFailure:
      type: object
      properties:
        success:
          type: boolean
          example: false
        errors:
          $ref: "#/components/schemas/Errors"
    Errors:
      type: array
      items:
        $ref: "#/components/schemas/Error"
    Error:
      type: object
      properties:
        code:
          type: string
          enum:
            - BAD_REQUEST
            - UNAUTHORIZED
            - NOT_FOUND
            - UNPROCESSABLE_ENTITY
        message:
          type: string
          example: "Missing required field."
        target:
          type: string
          example: "field"
    NullData:
      type: object
      nullable: true
      example: null

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        username:
          type: string
          example: "admin"
    Wallet:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        amount:
          type: string
          format: float
          example: "42.01"
    Operation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        source_wallet_id:
          type: string
          format: uuid
          example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        destination_wallet_id:
          type: string
          format: uuid
          example: "1bb41739-afb5-41c5-aaee-b344f7066bf9"
        type:
          type: string
          enum:
            - "FAUCET"
            - "TRANSFER"
        amount:
          type: string
          format: float
          example: "-42.01"
        timestamp:
          type: string
          format: date-time

    LoginBody:
      type: object
      properties:
        username:
          type: string
          example: "admin"
        password:
          type: string
          example: "pass"
    RegisterBody:
      type: object
      properties:
        username:
          type: string
          example: "admin"
        password:
          type: string
          example: "pass"
        passwordConfirm:
          type: string
          example: "pass"
    WalletDepositBody:
      type: object
      properties:
        amount:
          type: string
          format: "float"
          example: "42.01"
    WalletTransferBody:
      type: object
      properties:
        destination:
          type: string
          format: "uuid"
          example: "1bb41739-afb5-41c5-aaee-b344f7066bf9"
        amount:
          type: string
          format: "float"
          example: "42.01"

  parameters:
    timestamp:
      name: timestamp
      in: query
      description: ISO-formatted timestamp
      required: false
      schema:
        type: string
        format: date-time
    order:
      name: order
      in: query
      description: Order direction
      required: false
      schema:
        type: string
        enum:
          - "asc"
          - "desc"

    limit:
      name: limit
      in: query
      description: Dataset limit
      required: false
      schema:
        type: integer

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: cookie
      name: sessionid
